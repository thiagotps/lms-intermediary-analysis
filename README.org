#+title: Readme

* Introduction
This is a experimental repository dedicated to the testing of the *intermediaryAnalysis* branch of the
[[https://github.com/thiagotps/lmshs][lmshs]] repository.

* Cloning
For cloning this repository and its submodules, just run:
#+begin_src bash
git clone https://github.com/thiagotps/lms-intermediary-analysis
cd lms-intermediary-analysis
git submodule init
git submodule update
#+end_src

* Compiling
For compiling you'll need [[https://docs.haskellstack.org/en/v1.2.0/install_and_upgrade/][stack]] installed, which probably can be easily achieved via your distribution's package manager. With this in hand, just execute:
 #+begin_src bash
stack build
 #+end_src
* Running

 To get some help on the usage, just type:
 #+begin_src bash
 stack run lmshs -- --help
 #+end_src

 #+begin_src txt
The progargs program

progargs [COMMAND] ... [OPTIONS]

Common flags:
  -N=INT                              Filter length.
  -M=INT                              Data length.
  -?     --help                       Display help message
  -V     --version                    Print version information

progargs complete [OPTIONS]

  -n     --numfile=ITEM               Where to write the numerical matrices.
         --symfile=ITEM               Where to write the symbolic matrices.
  -e     --emsefile=ITEM              Where to write the emse evolution.
         --maxiter=INT                The last iteration.
         --stepsize=NUM               step-size.
         --sigmav2=NUM                variance (σᵥ²).
         --startlevelforia=INT        The level to start applying the IA
                                      assumption.
         --maxstepsize                Compute the maximum step-size
  -b     --binarysearchprecision=INT  The expoent describing the precision
                                      (i.e: if this is n than the precision is
                                      10**(-n))
  -u     --usespectra                 Compute the maximum eigenvalue using
                                      Spectra's algorithm when our power-method
                                      fails.

progargs simple [OPTIONS]

  -s     --startlevelforia=INT        The level to start applying the IA
                                      assumption.
 #+end_src


 This program has two modes, namely =simple= and =complete=. The =simple= mode can be used
 when only what is desired is the number of equations. So the code doesn't need to do extra calculations
 for unneeded things and can focus only in get the total number of equations. The =complete= mode ought to be used when more information is required, such as the numerical/symbolic matrices, the =emse= evolution and so on. In this mode it's also possible to inquire the maximum *setpsize* available for the given setting.

** Simple
 For example, let's say we are interested in the total number of equations for the setting with the =filter length= (N) being equal to 3 and the =data lenght= (M) being 2. We can use the following command:
 #+begin_src bash
stack run lmshs -- simple -N 3 -M 2
 #+end_src

 Whose output is (note that the number of equations *per recursion level* is also displayed):
 #+begin_src txt
"Running with 1 threads."
numberOfLevels = 4
levelSize = [16,188,340,154]
numberOfEqs = 698
 #+end_src


Suppose now that we want to repeat the above experiment but applying the independence assumption on level 2 and forward of the recursion. We can thus execute:
 #+begin_src bash
stack run lmshs -- simple -N 3 -M 2 --startlevelforia 2
 #+end_src

#+begin_src bash
"Running with 1 threads."
numberOfLevels = 3
levelSize = [16,188,3]
numberOfEqs = 207
#+end_src

If =--startlevelforia= is set to 1, than it's the same as applying the I.A assumption to the whole process.
#+begin_src bash
stack run lmshs -- simple -N 3 -M 2 --startlevelforia 1
#+end_src

#+begin_src txt
"Running with 1 threads."
numberOfLevels = 2
levelSize = [5,1]
numberOfEqs = 6
#+end_src

** Complete


For example, to get the maximum *setpsize* for the setting with $N = 3$, $M = 2$ and $\sigma_{\nu}^{2}=0.01$,
the following can be used.
#+begin_src bash
stack run lmshs -- complete -N 3 -M 2  --maxstepsize --sigmav2 0.01
#+end_src

#+begin_src txt
"Running with 1 threads."
numberOfLevels = 4
levelSize = [16,188,340,154]
numberOfEqs = 698
number of elements in the resulting matrix: 24931
Computing the maximum step-size ...
useSpectra = False
Maximum step-size = 0.13583465576171877
#+end_src

If it's needed to repeat the above experiment, but applying the I.A hypothesis from the second recursion level, then what should be executed is:
#+begin_src bash
stack run lmshs -- complete -N 3 -M 2 --startlevelforia 2  --maxstepsize --sigmav2 0.01
#+end_src

#+begin_src txt
"Running with 1 threads."
startLevelForIA = 2
numberOfLevels = 3
levelSize = [16,188,3]
numberOfEqs = 207
number of elements in the resulting matrix: 1614
Computing the maximum step-size ...
useSpectra = False
Maximum step-size = 0.2833316040039062
#+end_src

Suppose now that we want to output the =emse= evolution for the above setting, with $\text{stepsize} = 0.2$ and 300 iterations. Then we execute:
#+begin_src bash
stack run lmshs -- complete -N 3 -M 2 --startlevelforia 2 --maxiter 300 --stepsize 0.2 --sigmav2 0.01 --emsefile /tmp/esme.txt
#+end_src

The contents of =/tmp/esme.txt= is now:
#+begin_src txt
0 2.875
1 2.1750000000000003
2 5.467327695312503
3 4.3581896215625004
4 3.617976461170068
5 3.090299513961322
6 2.641054712892052
7 2.262411369667735
8 1.9508234573201937
9 1.689767947484945
10 1.4699065201323935
11 1.2838312114539074
12 1.1255282390852692
13 0.9901713498509848
14 0.8739030898110943
15 0.77359809412587
16 0.6867140368771202
17 0.6111712018526473
18 0.5452586871139086
19 0.48756120604907704
20 0.43690182908107467
21 0.3922968172700536
22 0.35291986739877534
23 0.31807365713448527
24 0.2871670829145516
25 0.25969695669021564
26 0.2352332120657838
27 0.21340688543393665
28 0.19390030222221133
29 0.17643902406751
30 0.16078520920598394
31 0.14673211264838348
32 0.13409951012749383
33 0.12272987435599886
34 0.11248516684581092
35 0.10324413570205997
36 9.490003115283252e-2
37 8.73586674298815e-2
38 8.05367729830547e-2
39 7.436058166258855e-2
40 6.876462603001168e-2
41 6.369070081559308e-2
42 5.908697008003788e-2
43 5.490719613357639e-2
44 5.111007192944545e-2
45 4.7658641647429834e-2
46 4.451979664732584e-2
47 4.166383600504034e-2
48 3.9064082527262345e-2
49 3.669654653928894e-2
50 3.4539630906651145e-2
51 3.257387172642602e-2
52 3.0781709942211438e-2
53 2.9147289824950677e-2
54 2.7656280842301893e-2
55 2.6295719930154622e-2
56 2.505387159604002e-2
57 2.392010363776312e-2
58 2.2884776561674786e-2
59 2.193914504193505e-2
60 2.1075269981822548e-2
61 2.0285939926383213e-2
62 1.9564600737302533e-2
63 1.890529257986183e-2
64 1.8302593391584784e-2
65 1.775156810554374e-2
66 1.72477229906758e-2
67 1.678696454888417e-2
68 1.6365562475886393e-2
69 1.598011625117305e-2
70 1.5627524973293335e-2
71 1.5304960101039274e-2
72 1.5009840799853815e-2
73 1.47398116267037e-2
74 1.4492722316390018e-2
75 1.426660945837633e-2
76 1.4059679876176139e-2
77 1.387029554157011e-2
78 1.36969598737723e-2
79 1.3538305289439325e-2
80 1.339308188337909e-2
81 1.3260147132193745e-2
82 1.313845652408144e-2
83 1.3027055027792812e-2
84 1.2925069322439009e-2
85 1.2831700717606226e-2
86 1.2746218700158924e-2
87 1.2667955050307243e-2
88 1.2596298475058342e-2
89 1.2530689712140934e-2
90 1.2470617061951472e-2
91 1.2415612309076996e-2
92 1.2365246998552761e-2
93 1.2319129035256879e-2
94 1.2276899577768029e-2
95 1.2238230200649718e-2
96 1.2202820301506089e-2
97 1.2170394731306418e-2
98 1.2140701628422103e-2
99 1.2113510438581849e-2
100 1.2088610104546833e-2
101 1.2065807410754543e-2
102 1.204492546949227e-2
103 1.2025802336352448e-2
104 1.200828974380392e-2
105 1.199225194269612e-2
106 1.1977564642407049e-2
107 1.1964114041158744e-2
108 1.1951795938763854e-2
109 1.1940514924740471e-2
110 1.1930183635345728e-2
111 1.1920722073637768e-2
112 1.1912056987185018e-2
113 1.1904121298506282e-2
114 1.1896853583748762e-2
115 1.1890197595497644e-2
116 1.1884101825963566e-2
117 1.1878519107116254e-2
118 1.1873406244626485e-2
119 1.1868723682746999e-2
120 1.1864435197508145e-2
121 1.186050761582799e-2
122 1.1856910558341325e-2
123 1.1853616203938957e-2
124 1.1850599074179704e-2
125 1.1847835835893706e-2
126 1.1845305120438559e-2
127 1.184298735820046e-2
128 1.1840864627051936e-2
129 1.1838920513587061e-2
130 1.1837139986054998e-2
131 1.1835509278004051e-2
132 1.1834015781732174e-2
133 1.1832647950716273e-2
134 1.183139521026275e-2
135 1.1830247875685729e-2
136 1.1829197077378086e-2
137 1.1828234692194052e-2
138 1.1827353280611172e-2
139 1.182654602918451e-2
140 1.1825806697846965e-2
141 1.1825129571647308e-2
142 1.1824509416551965e-2
143 1.1823941438968193e-2
144 1.1823421248675072e-2
145 1.1822944824875291e-2
146 1.1822508485104823e-2
147 1.1822108856759795e-2
148 1.182174285102014e-2
149 1.1821407638968186e-2
150 1.1821100629717378e-2
151 1.1820819450381832e-2
152 1.1820561927731767e-2
153 1.182032607139288e-2
154 1.1820110058459666e-2
155 1.1819912219403643e-2
156 1.181973102516752e-2
157 1.1819565075345434e-2
158 1.1819413087357865e-2
159 1.1819273886537494e-2
160 1.1819146397049347e-2
161 1.1819029633574996e-2
162 1.1818922693696502e-2
163 1.1818824750921242e-2
164 1.1818735048293642e-2
165 1.1818652892544482e-2
166 1.1818577648732446e-2
167 1.1818508735336604e-2
168 1.1818445619761775e-2
169 1.1818387814222094e-2
170 1.1818334871970947e-2
171 1.181828638384809e-2
172 1.1818241975117313e-2
173 1.1818201302570178e-2
174 1.1818164051873426e-2
175 1.181812993513958e-2
176 1.1818098688701954e-2
177 1.1818070071076847e-2
178 1.1818043861097218e-2
179 1.181801985620335e-2
180 1.1817997870877377e-2
181 1.181797773520947e-2
182 1.1817959293584696e-2
183 1.1817942403480346e-2
184 1.1817926934364443e-2
185 1.1817912766686929e-2
186 1.1817899790955728e-2
187 1.1817887906890544e-2
188 1.1817877022647845e-2
189 1.181786705411106e-2
190 1.1817857924240503e-2
191 1.181784956247796e-2
192 1.18178419042014e-2
193 1.1817834890225556e-2
194 1.1817828466344502e-2
195 1.1817822582912751e-2
196 1.1817817194461566e-2
197 1.1817812259347563e-2
198 1.1817807739430879e-2
199 1.1817803599780413e-2
200 1.1817799808403869e-2
201 1.1817796336000507e-2
202 1.1817793155734703e-2
203 1.181779024302855e-2
204 1.1817787575371913e-2
205 1.1817785132148467e-2
206 1.181778289447636e-2
207 1.1817780845062308e-2
208 1.1817778968067925e-2
209 1.181777724898733e-2
210 1.1817775674535038e-2
211 1.1817774232543297e-2
212 1.181777291186804e-2
213 1.1817771702302757e-2
214 1.1817770594499639e-2
215 1.1817769579897306e-2
216 1.1817768650654667e-2
217 1.1817767799590307e-2
218 1.1817767020126992e-2
219 1.1817766306240842e-2
220 1.1817765652414776e-2
221 1.1817765053595861e-2
222 1.1817764505156286e-2
223 1.1817764002857573e-2
224 1.1817763542817838e-2
225 1.1817763121481785e-2
226 1.1817762735593224e-2
227 1.181776238216992e-2
228 1.181776205848053e-2
229 1.1817761762023506e-2
230 1.1817761490507755e-2
231 1.181776124183494e-2
232 1.181776101408326e-2
233 1.1817760805492593e-2
234 1.1817760614450902e-2
235 1.1817760439481769e-2
236 1.1817760279232994e-2
237 1.1817760132466134e-2
238 1.1817759998046937e-2
239 1.1817759874936586e-2
240 1.181775976218365e-2
241 1.1817759658916752e-2
242 1.1817759564337817e-2
243 1.1817759477715916e-2
244 1.1817759398381613e-2
245 1.18177593257218e-2
246 1.1817759259174943e-2
247 1.1817759198226745e-2
248 1.1817759142406193e-2
249 1.1817759091281889e-2
250 1.181775904445873e-2
251 1.1817759001574859e-2
252 1.1817758962298858e-2
253 1.181775892632719e-2
254 1.1817758893381861e-2
255 1.1817758863208261e-2
256 1.1817758835573202e-2
257 1.1817758810263111e-2
258 1.1817758787082387e-2
259 1.1817758765851883e-2
260 1.181775874640753e-2
261 1.181775872859905e-2
262 1.181775871228882e-2
263 1.1817758697350784e-2
264 1.1817758683669508e-2
265 1.181775867113925e-2
266 1.1817758659663176e-2
267 1.18177586491526e-2
268 1.181775863952629e-2
269 1.1817758630709854e-2
270 1.1817758622635153e-2
271 1.1817758615239787e-2
272 1.18177586084666e-2
273 1.181775860226325e-2
274 1.1817758596581796e-2
275 1.1817758591378326e-2
276 1.1817758586612633e-2
277 1.1817758582247883e-2
278 1.1817758578250343e-2
279 1.181775857458912e-2
280 1.1817758571235924e-2
281 1.1817758568164836e-2
282 1.1817758565352119e-2
283 1.1817758562776039e-2
284 1.181775856041669e-2
285 1.1817758558255835e-2
286 1.1817758556276776e-2
287 1.1817758554464215e-2
288 1.1817758552804147e-2
289 1.1817758551283745e-2
290 1.1817758549891255e-2
291 1.1817758548615916e-2
292 1.1817758547447875e-2
293 1.18177585463781e-2
294 1.1817758545398328e-2
295 1.1817758544500984e-2
296 1.1817758543679136e-2
297 1.1817758542926429e-2
298 1.1817758542237048e-2
299 1.1817758541605668e-2
300 1.1817758541027406e-2
#+end_src
